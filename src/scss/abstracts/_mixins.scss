@use "sass:math";
@use "functions" as *;
@use "variables" as *;

@mixin animation($duration) {
  $name: animation-#{unique-id()};

  @keyframes #{$name} {
    @content;
  }

  animation-name: $name;
  animation-duration: $duration;
  animation-iteration-count: infinite;
}

@mixin font(
  $size: null,
  $weight: null,
  $height: null,
  $spacing: null,
  $align: null,
  $transform: null,
  $family: null
) {
  $allParameters: (
    $size,
    $weight,
    $height,
    $spacing,
    $align,
    $transform,
    $family
  );

  $styles: ();

  @each $value in $allParameters {
    @if is-bracketed($value) {
      $styles: validateStrings($value);
      @if length($styles) == 0 {
        $styles: append($styles, $value);
      }
    }
  }

  // @each $rule in $styles {
  //   #{$rule};
  // }

  @if $size {
    @if type-of($size) == number {
      font-size: #{$size}rem;
    } @else {
      font-size: #{$size};
    }
  }
  @if $weight {
    font-weight: #{$weight};
  }
  @if $height {
    line-height: #{$height};
  }
  @if $spacing {
    letter-spacing: #{$spacing};
  }
  @if $align {
    text-align: $align;
  }
  @if $transform {
    text-transform: $transform;
  }
  @if $family {
    font-family: $family;
  }
}

@mixin max-width-content($add: 0) {
  max-width: px2rem($max-width-content) + 2 * $padding-inline-max + $add;
  margin-inline: auto;
}

@mixin padding-inline {
  padding-inline: $padding-inline-content;
}
